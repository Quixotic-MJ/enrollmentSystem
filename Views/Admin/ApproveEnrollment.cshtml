@{
    ViewBag.Title = "Schedule Management";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@3.2.47/dist/vue.global.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        &::-webkit-scrollbar {
            display: none;
        }

        .validation-error {
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }

        .form-select:invalid, .form-control:invalid {
            border-color: #dc3545;
        }
        
        .modal {
            transition: opacity 0.3s ease;
        }
        
        .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.5);
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col" id="app">
<div class="container mx-auto px-4 py-8 flex-grow">
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-gray-800">View All Enrollment Applicants</h1>
    </div>

    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-blue-50">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                    Student Id
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                    Full Name
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                    Student Status
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Program</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                    Year Level
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Actions
                </th>
            </tr>
            </thead>
            <tbody id="scheduleTableBody" class="bg-white divide-y divide-gray-200">
            <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">123456</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">John Doe Smith</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Regular</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Bs Computer Science</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">2nd Year</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <a href="#" class="text-blue-600 hover:text-blue-900 mr-2" @@click="openEditScheduleModal">
                        View
                    </a>
                </td>
            </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Add Schedule Modal -->
<div class="fixed inset-0 z-50 flex items-center justify-center" v-if="showAddScheduleModal">
    <div class="fixed inset-0 bg-gray-500 opacity-75" @@click="showAddScheduleModal = false"></div>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
        <form id="addScheduleForm" method="post" data-action="/Schedule/Add">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Add Schedule</h3>

                        <!-- Course selector -->
                        <div class="w-full mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Course <span
                                    class="text-red-500">*</span></label>
                            <select
                                class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                name="CrsCode" id="courseSelect" required>
                                <option value="">Select Course</option>
                                
                            </select>
                            <div class="validation-error" id="courseError"></div>
                        </div>

                        <div class="w-full mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Room <span
                                    class="text-red-500">*</span></label>
                            <input type="text" name="Room"
                                   class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                   required placeholder="Enter room number/name"/>
                            <div class="validation-error" id="roomError"></div>
                        </div>

                        <div class="w-full mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Professor (Optional)</label>
                            <input type="text" name="Prof"
                                   class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                   placeholder="Enter professor name"/>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="submit"
                        class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                    Add Schedule
                </button>
                <button type="button"
                        class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                        @@click="showAddScheduleModal = false">
                    Cancel
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Schedule Modal -->
<div class="fixed inset-0 z-50 flex items-center justify-center" v-if="showEditScheduleModal">
    <div class="fixed inset-0 bg-gray-500 opacity-75" @@click="showEditScheduleModal = false"></div>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full">
        <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <div class="sm:flex sm:items-start">
                
                @* Displays all the subjects that is for that specific year level and Program  *@
                <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                    <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Enrollment Info</h3>

                    <div class="mb-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <strong class="text-gray-700">Program:</strong> <span id="scheduleCourseName"
                                                                                      class="text-gray-900">BS Computer Science</span>
                            </div>
                        </div>
                    </div>

                    <div class="flex flex-column overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-blue-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                                    COURSE CODE
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                                    DESCRIPTIVE TITLE
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                                    UNITS
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                                    PREREQUISITES
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">
                                    ACTIONS
                                </th>
                            </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">CS101</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Intro to Programming</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">3</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Data Structures</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                   
                                    <button class="text-red-600 hover:text-red-900" @@click="confirmDeleteSession(session)">
                                        Remove
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">PHYS101</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Physics</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">3</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Data Structures</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                   
                                    <button class="text-red-600 hover:text-red-900" @@click="confirmDeleteSession(session)">
                                        Remove
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">MATH101</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">College Algebra</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">3</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">NONE</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                   
                                    <button class="text-red-600 hover:text-red-900" @@click="confirmDeleteSession(session)">
                                        Remove
                                    </button>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                    
                    @* Show only if the student status is irregular *@
                    <h6 class="text-lg font-medium mb-2 mt-4">Selected Subjects</h6>
                    <div class="overflow-x-auto mb-4">
                        <table class="min-w-full divide-y divide-gray-200 border border-gray-200">
                            <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    COURSE CODE
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    DESCRIPTIVE TITLE
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Units
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Action
                                </th>
                            </tr>
                            </thead>
                            <tbody id="selectedSubjectsTableBody" class="bg-white divide-y divide-gray-200">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
            <button
                class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm"
                @@click="openAddSessionModal">
                Assign Section
            </button>
            <button
                class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                @@click="showEditScheduleModal = false">
                Reject
            </button>
        </div>
    </div>
</div>

<!-- Add Session Modal -->
<div class="fixed inset-0 z-50 flex items-center justify-center" v-if="showAddSessionModal">
    <div class="fixed inset-0 bg-gray-500 opacity-75" @@click="showAddSessionModal = false"></div>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full">
        <form id="addSessionForm" data-action="/Schedule/AddSession" method="post">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Add Session</h3>

                        <div class="mb-4">
                            <div class="bg-blue-50 p-3 rounded-md mb-4">
                                <p class="text-sm text-gray-700"><strong>Course:</strong> <span
                                        class="font-medium">Multimedia</span></p>
                                <p class="text-sm text-gray-700"><strong>Remaining Hours:</strong> <span
                                        class="font-medium">3</span>h</p>
                            </div>
                        </div>

                        <input type="hidden" name="SchdId" value=""/>

                        <div class="grid grid-cols-1 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Day <span
                                        class="text-red-500">*</span></label>
                                <select
                                    class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    name="TslDay" required v-model="newSession.day">
                                    <option value="">Select Day</option>
                                    <option value="1">Monday</option>
                                    <option value="2">Tuesday</option>
                                    <option value="3">Wednesday</option>
                                    <option value="4">Thursday</option>
                                    <option value="5">Friday</option>
                                    <option value="6">Saturday</option>
                                    <option value="0">Sunday</option>
                                </select>
                                <div class="validation-error" id="dayError"></div>
                            </div>

                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Start Time <span
                                            class="text-red-500">*</span></label>
                                    <input type="time" name="TslStartTime"
                                           class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                           required min="07:00" max="21:00" v-model="newSession.startTime"/>
                                    <div class="validation-error" id="startTimeError"></div>
                                </div>

                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">End Time <span
                                            class="text-red-500">*</span></label>
                                    <input type="time" name="TslEndTime"
                                           class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                           required min="08:00" max="22:00" v-model="newSession.endTime"/>
                                    <div class="validation-error" id="endTimeError"></div>
                                </div>
                            </div>

                            <div class="text-xs text-gray-500">
                                <p>Session hours: 7:00 AM - 10:00 PM</p>
                                <p>Duration: 1-4 hours per session</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" @@click="addSession"
                        class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                    Add Session
                </button>
                <button type="button"
                        class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                        @@click="showAddSessionModal = false">
                    Cancel
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Session Modal -->
<div class="fixed inset-0 z-50 flex items-center justify-center" v-if="showEditSessionModal">
    <div class="fixed inset-0 bg-gray-500 opacity-75" @@click="showEditSessionModal = false"></div>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full">
        <form id="editSessionForm">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Edit Session</h3>

                        <!-- Hidden Fields -->
                        <input type="hidden" name="SsnId" v-model="editingSession.id"/>
                        <input type="hidden" name="SchdId" v-model="editingSession.scheduleId"/>

                        <!-- Day Selection -->
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Day <span
                                    class="text-red-500">*</span></label>
                            <select
                                class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                name="TslDay" required v-model="editingSession.day">
                                <option value="">Select Day</option>
                                <option value="0">Sunday</option>
                                <option value="1">Monday</option>
                                <option value="2">Tuesday</option>
                                <option value="3">Wednesday</option>
                                <option value="4">Thursday</option>
                                <option value="5">Friday</option>
                                <option value="6">Saturday</option>
                            </select>
                            <div class="validation-error text-red-500" id="tsldayError"></div>
                        </div>

                        <!-- Time Inputs -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Start Time <span
                                        class="text-red-500">*</span></label>
                                <input type="time" name="TslStartTime"
                                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                       required min="07:00" max="21:00" v-model="editingSession.startTime"/>
                                <div class="validation-error text-red-500" id="tslstarttimeError"></div>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">End Time <span
                                        class="text-red-500">*</span></label>
                                <input type="time" name="TslEndTime"
                                       class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                                       required min="08:00" max="22:00" v-model="editingSession.endTime"/>
                                <div class="validation-error text-red-500" id="tslendtimeError"></div>
                            </div>
                        </div>

                        <div class="text-xs text-gray-500">
                            <p>Allowed time range: 7:00 AM - 10:00 PM</p>
                            <p>Duration: 1–4 hours per session</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" @@click="saveEditedSession"
                        class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                    Save Changes
                </button>
                <button type="button"
                        class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                        @@click="showEditSessionModal = false">
                    Cancel
                </button>
            </div>
        </form>
    </div>
</div>

<script>
const { createApp, ref } = Vue;

createApp({
    setup() {
        // Modal visibility states
        const showAddScheduleModal = ref(false);
        const showEditScheduleModal = ref(false);
        const showAddSessionModal = ref(false);
        const showEditSessionModal = ref(false);
        
        // Sample data
        const sessions = ref([
            { id: 1, scheduleId: 1, day: 4, startTime: '10:00', endTime: '12:00', duration: 2 },
            { id: 2, scheduleId: 1, day: 5, startTime: '09:00', endTime: '12:00', duration: 3 }
        ]);
        
        const newSession = ref({
            day: '',
            startTime: '',
            endTime: '',
            duration: 0
        });
        
        const editingSession = ref({
            id: 0,
            scheduleId: 0,
            day: '',
            startTime: '',
            endTime: '',
            duration: 0
        });
        
        // Methods
        const openEditScheduleModal = () => {
            showEditScheduleModal.value = true;
        };
        
        const openAddSessionModal = () => {
            showAddSessionModal.value = true;
            // Reset form
            newSession.value = { day: '', startTime: '', endTime: '', duration: 0 };
        };
        
        const openEditSessionModal = (session) => {
            editingSession.value = { ...session };
            showEditSessionModal.value = true;
        };
        
        const confirmDeleteSchedule = () => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire(
                        'Deleted!',
                        'The schedule has been deleted.',
                        'success'
                    );
                    // Here you would call your API to delete the schedule
                }
            });
        };
        
        const confirmDeleteSession = (session) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Remove the session from the array
                    sessions.value = sessions.value.filter(s => s.id !== session.id);
                    Swal.fire(
                        'Deleted!',
                        'The session has been deleted.',
                        'success'
                    );
                    // Here you would call your API to delete the session
                }
            });
        };
        
        const addSession = () => {
            // Calculate duration
            const start = new Date(`01/01/2000 ${newSession.value.startTime}`);
            const end = new Date(`01/01/2000 ${newSession.value.endTime}`);
            const duration = (end - start) / (1000 * 60 * 60);
            
            if (duration <= 0 || duration > 4) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Duration',
                    text: 'Session duration must be between 1 and 4 hours',
                });
                return;
            }
            
            // Add the new session
            const newId = sessions.value.length > 0 ? Math.max(...sessions.value.map(s => s.id)) + 1 : 1;
            sessions.value.push({
                id: newId,
                scheduleId: 1, // This would come from the parent schedule
                day: newSession.value.day,
                startTime: newSession.value.startTime,
                endTime: newSession.value.endTime,
                duration: duration
            });
            
            showAddSessionModal.value = false;
            Swal.fire({
                icon: 'success',
                title: 'Session Added',
                text: 'The new session has been added successfully',
            });
        };
        
        const saveEditedSession = () => {
            // Calculate duration
            const start = new Date(`01/01/2000 ${editingSession.value.startTime}`);
            const end = new Date(`01/01/2000 ${editingSession.value.endTime}`);
            const duration = (end - start) / (1000 * 60 * 60);
            
            if (duration <= 0 || duration > 4) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Duration',
                    text: 'Session duration must be between 1 and 4 hours',
                });
                return;
            }
            
            // Update the session
            const index = sessions.value.findIndex(s => s.id === editingSession.value.id);
            if (index !== -1) {
                sessions.value[index] = { 
                    ...editingSession.value,
                    duration: duration
                };
            }
            
            showEditSessionModal.value = false;
            Swal.fire({
                icon: 'success',
                title: 'Session Updated',
                text: 'The session has been updated successfully',
            });
        };
        
        const getDayName = (dayValue) => {
            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            return days[dayValue] || '';
        };
        
        return {
            showAddScheduleModal,
            showEditScheduleModal,
            showAddSessionModal,
            showEditSessionModal,
            sessions,
            newSession,
            editingSession,
            openEditScheduleModal,
            openAddSessionModal,
            openEditSessionModal,
            confirmDeleteSchedule,
            confirmDeleteSession,
            addSession,
            saveEditedSession,
            getDayName
        };
    }
}).mount('#app');
</script>
</body>
</html>